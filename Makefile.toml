[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true
CARGO_MAKE = true

[plugins.impl.powershell]
script = '''
# Adds simpler powershell integration

# make sure we are on windows
windows = is_windows
assert ${windows}

# make sure the task has args
args_empty = array_is_empty ${task.args}
assert_false ${args_empty}

task_definition = json_parse --collection ${task.as_json}

# prepend powershell args to task args
powershell_args = array -C
all_args = array_concat ${powershell_args} ${task.args}
args = map_get ${task_definition} args
release ${args}
map_put ${task_definition} args ${all_args}

# set powershell command
map_put ${task_definition} command pwsh.exe

powershell_task_json = json_encode --collection ${task_definition}

echo Custom Task:\n${powershell_task_json}
cm_plugin_run_custom_task ${powershell_task_json}
'''

[tasks.format]
install_crate = "rustfmt"
command = "cargo"
args = ["fmt", "--", "--emit=files"]

[tasks.clean]
command = "cargo"
args = ["clean"]

[tasks.docker-clean]
script_runner = "@duckscript"
script = '''
rm -r ${CARGO_MAKE_WORKING_DIRECTORY}/docker/target
'''

[tasks.docker-prepare]
script_runner = "@duckscript"
script = '''
mkdir ${CARGO_MAKE_WORKING_DIRECTORY}/docker/target
'''

[tasks.docker-copy]
script_runner = "@shell"
script = '''
cp ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/target/release/${CARGO_MAKE_CRATE_NAME}.d ./docker/target/rust-playground-app
'''
dependencies = ["docker-prepare"]

[tasks.docker-copy-conf]
script_runner = "@shell"
script = '''
cp ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/logging_config.yaml ./docker/target/
'''
dependencies = ["docker-prepare"]

[tasks.docker-build]
command = "docker"
disabled = true # linux/arm64/v8, linux/amd64
args = ["buildx", "build", "--platform", "linux/amd64", "./docker",
    "-t", "nierhoff/rust-playground/${CARGO_MAKE_CRATE_NAME}:${CARGO_MAKE_CRATE_VERSION}",
    "-t", "nierhoff/rust-playground/${CARGO_MAKE_CRATE_NAME}"
]
dependencies = ["docker-prepare", "docker-copy", "docker-copy-conf"]

[tasks.docker-build-old]
command = "docker"
disabled = true
args = ["build", "./docker",
    "-t", "nierhoff/rust-playground/${CARGO_MAKE_CRATE_NAME}:${CARGO_MAKE_CRATE_VERSION}",
    "-t", "nierhoff/rust-playground/${CARGO_MAKE_CRATE_NAME}"
]
dependencies = ["docker-prepare", "docker-copy", "docker-copy-conf"]

[tasks.printenv]
command = "printenv"

[tasks.myci]
dependencies = [
    "format",
    "build",
    "test",
    "build-release",
    "docker-copy",
    "docker-build"
]

[tasks.dockerci]
dependencies = [
    "build-release",
    "docker-clean",
    "docker-build"
]
